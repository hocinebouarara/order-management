name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  backend-build:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build with Maven
        working-directory: backend/order-management
        run: mvn clean package -DskipTests

      - name: Run Tests
        working-directory: backend/order-management
        run: mvn test

  frontend-build:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        working-directory: frontend/app
        run: npm install

      - name: Run Tests
        working-directory: frontend/app
        run: npm test --if-present

      - name: Build React App
        working-directory: frontend/app
        run: npm run build

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [backend-build, frontend-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order-management:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/order-management:latest
